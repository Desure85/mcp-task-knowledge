name: Docker Build Base Images

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: "Target platforms (comma-separated)"
        required: false
        default: "linux/amd64"
      tag:
        description: "Tag to publish (default: latest)"
        required: false
        default: "latest"

jobs:
  build-base:
    name: Build Base ${{ matrix.name }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      PLATFORMS: ${{ github.event.inputs.platforms || 'linux/amd64' }}
      PUBLISH_TAG: ${{ github.event.inputs.tag || 'latest' }}

    strategy:
      fail-fast: false
      max-parallel: 1        # ограничение до 2 параллельных тасков
      matrix:
        include:
          - name: deps
            target: base-bm25-with-deps
            image: mcp-base-bm25
          - name: onnx-cpu
            target: base-onnx-cpu-with-models
            image: mcp-base-onnx
          - name: onnx-gpu
            target: base-onnx-gpu-with-models
            image: mcp-base-onnx-gpu
          # Catalog-embedded base images (cat)
          - name: deps-cat
            target: base-bm25-with-deps
            image: mcp-base-bm25-cat
            embedCatalog: true
          - name: onnx-cpu-cat
            target: base-onnx-cpu-with-models
            image: mcp-base-onnx-cat
            embedCatalog: true
          - name: onnx-gpu-cat
            target: base-onnx-gpu-with-models
            image: mcp-base-onnx-gpu-cat
            embedCatalog: true
          # GHCR proxy toolchain images (avoid docker.io in app builds)
          - name: proxy-node20-bullseye
            target: proxy-node20-bullseye
            image: mcp-node
            image_tag: 20-bullseye
          - name: proxy-node20-alpine
            target: proxy-node20-alpine
            image: mcp-node
            image_tag: 20-alpine
          - name: proxy-python311-slim
            target: proxy-python311-slim
            image: mcp-python
            image_tag: 3.11-slim
          - name: proxy-cuda-12-4-1
            target: proxy-cuda-12-4-1
            image: mcp-cuda
            image_tag: 12.4.1-cudnn-runtime-ubuntu22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Compute base repo owner (lowercase)
        id: names
        shell: bash
        run: |
          set -euo pipefail
          owner_lc="${GITHUB_REPOSITORY_OWNER,,}"
          echo "owner=${owner_lc}" >> "$GITHUB_OUTPUT"
          echo "base_repo=ghcr.io/${owner_lc}" >> "$GITHUB_OUTPUT"

      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.target }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          provenance: false
          sbom: false
          build-args: |
            NPM_REGISTRY=https://registry.npmjs.org/
            SERVICE_CATALOG_GIT=${{ matrix.embedCatalog && 'https://github.com/Desure85/service-catalog.git' || '' }}
            BASE_NODE_IMAGE=${{ steps.names.outputs.base_repo }}/mcp-node:20-bullseye
            BASE_NODE_ALPINE_IMAGE=${{ steps.names.outputs.base_repo }}/mcp-node:20-alpine
            BASE_PY_IMAGE=${{ steps.names.outputs.base_repo }}/mcp-python:3.11-slim
            BASE_CUDA_IMAGE=${{ steps.names.outputs.base_repo }}/mcp-cuda:12.4.1-cudnn-runtime-ubuntu22.04
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.names.outputs.base_repo }}/${{ matrix.image }}:${{ matrix.image_tag || env.PUBLISH_TAG }}
            ${{ steps.names.outputs.base_repo }}/${{ matrix.image }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.PUBLISH_TAG }}
